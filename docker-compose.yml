# Docker Composeファイルのバージョンを指定しています。
version: '3'

# 以下では、「db」「web」「webpacker」の三つのサービスが定義されています。
services:
  # 「db」というサービスでは、mysqlを使用しています。
  db:
    # dbのイメージは、mysql:8.0を指定しています。
    image: mysql:8.0
    # MySQLがユーザーのパスワードを保護する方法を指定しています。
    command: --default-authentication-plugin=mysql_native_password
    # ローカルの状況を仮想環境の指定ディレクトリにマウント（接続）しています。
    volumes: 
      # ローカルの「./src/db/mysql_data」を、仮想環境のディレクトリ「/var/lib/mysql」に接続しています。
      - ./src/db/mysql_data:/var/lib/mysql
    # 環境変数を設定しています。
    environment: 
      # MYSQL_ROOT_PASSWORDを設定しています。
      MYSQL_ROOT_PASSWORD: password

  #「web」というサービスでは、「rails」を使用しています。
  web:
    # ビルドの指定をしています。
    build: .
    # サーバーを起動する際のコマンドを指定しています。
    # /bin/sh -c を使用してシェルコマンドを実行しています。
    # rm -f tmp/pids/server.pid は、一時的なプロセスIDファイルを削除します。
    # bundle exec rails s -p 3000 -b '0.0.0.0' は、Railsサーバーを起動するコマンドです。
    # -p 3000 は、ポート番号を3000に設定します。
    # -b '0.0.0.0' は、サーバーを全てのネットワークインターフェースにバインドします。
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # ローカルの状況を仮想環境の指定ディレクトリにマウント（接続）しています。
    volumes:
      # ローカルのsrcディレクトリを参照して、仮想環境にappディレクトリを作成しています。
      - ./src:/app
    # ポートの設定をしています。
    ports:
      # ローカル側の3000ポートを仮想環境の3000ポートに接続しています。
      - "3000:3000"
    # 依存関係を指定しています。
    depends_on:
      - db

  # 「webpacker」というサービスでは、RailsのWebpackerを使用しています。
  # 開発しやすい様に、複数のアセットファイルを作り直してくれます。
  # アセットとは、JavaScriptファイル、CSSファイル、画像ファイル、フォントファイルなどの事。
  webpacker:
    # ビルドの指定をしています。
    build: .
    # コマンドの指定をしています
    command: bundle exec rails webpacker:compile
    # ローカルの状況を仮想環境の指定ディレクトリにマウント（接続）しています。
    volumes:
      # ローカルのsrcディレクトリを参照して、仮想環境にappディレクトリを作成しています。
      - ./src:/app
